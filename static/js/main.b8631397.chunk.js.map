{"version":3,"sources":["containers/ListViewGrid.js","containers/ListView.js","components/CategoryViewGrid.js","containers/CategoryView.js","containers/AppBar.js","components/StockItemCard.js","containers/StockViewGrid.js","containers/StockView.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","color","palette","text","secondary","FullWidthGrid","props","classes","className","Grid","container","data","map","deviceInfo","item","xs","md","lg","Paper","Typography","variant","deviceName","list","stockInfo","colors","quantity","brand","model","ListView","length","Fragment","CssBaseline","Container","maxWidth","Box","mt","mb","style","textAlign","CategoryViewGrid","handleClick","bind","state","selected","value","this","setState","callBack","width","backgroundColor","array","key","Button","namevariant","onClick","React","Component","appleList","samsungList","CategoryView","menuButton","marginRight","title","ButtonAppBar","button","IconButton","edge","aria-label","addButton","backButton","AppBar","position","Toolbar","display","flexDirection","alignItems","margin","StockItemCard","updateQuantity","updateColors","addItem","isDisabled","add","QuantityCard","ColorCard","useState","alignment","setAlignment","ToggleButtonGroup","size","exclusive","onChange","event","newAlignment","fontSize","borderColor","ToggleButton","handleChange","includes","SaveButton","disabled","startIcon","stockData","index","StockView","DefaultView","AddCategoryView","AddStockView","App","stockView","categoryView","defautView","addItemToList","pageView","dataBase","retVal","findIndex","concat","view","currentView","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8631397.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function FullWidthGrid(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n          {props.data.map((deviceInfo) => {\r\n            return(\r\n                <Grid item xs={12} md ={6} lg={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography variant=\"h6\" >{deviceInfo.deviceName}</Typography>\r\n                        <ul>\r\n                            {deviceInfo.list.map((stockInfo) => {\r\n                                return(\r\n                                    stockInfo.colors.map((colors) => {\r\n                                        return(\r\n                                        <li>{stockInfo.quantity}x {stockInfo.brand} {stockInfo.model} {colors}</li>\r\n                                        )\r\n                                    })\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </Paper>\r\n                </Grid>\r\n            )\r\n          })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container, Box } from '@material-ui/core/';\r\nimport ListViewGrid from './ListViewGrid'\r\n\r\nexport default function ListView(props) {\r\n\r\n  if(props.data.length > 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container maxWidth=\"lg\">\r\n          <Box mt={6} mb={2}>\r\n            <Typography variant=\"h5\">Stock List</Typography>\r\n          </Box>\r\n          <ListViewGrid data={props.data}></ListViewGrid>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container maxWidth=\"lg\">\r\n          <Box mt={6} mb={2}>\r\n            <Typography variant=\"h5\">Stock List</Typography>\r\n          </Box>\r\n          <Box>\r\n            <Typography variant='h6' style={{textAlign: \"center\"}}>Oops! You haven't added any items yet, click the add circle icon in bar above to add an item.</Typography>\r\n          </Box>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport {Typography, Button, Grid} from '@material-ui/core';\r\n\r\nclass CategoryViewGrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {selected: ''};\r\n  }\r\n\r\n  handleClick(value) {\r\n    this.setState({selected: value});\r\n    this.props.callBack(value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const root = {\r\n      flexGrow: 1\r\n    };\r\n\r\n    const container = {\r\n      padding:'8px'\r\n    }\r\n\r\n    const paper = {\r\n      padding: '16px',\r\n      textAlign: 'center',\r\n      width: \"100%\",\r\n      backgroundColor: 'red',\r\n      color: 'white',\r\n      \r\n    }\r\n\r\n    return(\r\n      <div style={root}>\r\n      <Grid container spacing={1} style={container}>\r\n        {this.props.array.map((value) => {\r\n          return(\r\n            <Grid key={value} item xs={12} md ={6} lg={3}>\r\n              <Button style={paper} namevariant=\"contained\" onClick={() => this.handleClick({value})}>\r\n                <Typography variant='h6'>{value}</Typography>\r\n              </Button>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid> \r\n    </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default CategoryViewGrid;","import React from 'react'\r\nimport {Box, Container, Typography} from '@material-ui/core';\r\nimport CategoryViewGrid from '../components/CategoryViewGrid'\r\n\r\nconst appleList = [\r\n    \"iPhone 5\",\r\n    \"iPhone 5c\",\r\n    \"iPhone 5s\",\r\n    \"iPhone 6\",\r\n    \"iPhone 6 Plus\",\r\n    \"iPhone 6s\",\r\n    \"iPhone 6s Plus\",\r\n    \"iPhone SE\",\r\n    \"iPhone 7\",\r\n    \"iPhone 7 Plus\",\r\n    \"iPhone 8\",\r\n    \"iPhone 8 Plus\",\r\n    \"iPhone X\",\r\n    \"iPhone XR\",\r\n    \"iPhone XS\",\r\n    \"iPhone XS Max\",\r\n    \"iPhone 11\",\r\n    \"iPhone 11 Pro\",\r\n    \"iPhone 11 Pro Max\",\r\n    \"iPhone SE (2020)\"\r\n]\r\nconst samsungList = [\r\n    \"Galaxy S3\",\r\n    \"Galaxy S4\",\r\n    \"Galaxy S5\",\r\n    \"Galaxy S6\",\r\n    \"Galaxy S6 Edge\",\r\n    \"Galaxy S6 Edge+\",\r\n    \"Galaxy S6 Active\",\r\n    \"Galaxy S7\",\r\n    \"Galaxy S7 Edge\",\r\n    \"Galaxy S7 Active\",\r\n    \"Galaxy S8\",\r\n    \"Galaxy S8+\",\r\n    \"Galaxy S9\",\r\n    \"Galaxy S9+\",\r\n    \"Galaxy S10\",\r\n    \"Galaxy S10+\",\r\n    \"Galaxy S10e\",\r\n    \"Galaxy S10 5G\",\r\n    \"Galaxy S10 Lite\",\r\n    \"Galaxy S20\",\r\n    \"Galaxy S20+\",\r\n    \"Galaxy S20 Ultra\",\r\n    \"Galaxy Note 3\",\r\n    \"Galaxy Note 3 Neo\",\r\n    \"Galaxy Note 4\",\r\n    \"Galaxy Note Edge\",\r\n    \"Galaxy Note 5\",\r\n    \"Galaxy Note 7\",\r\n    \"Galaxy Note Fan Edition\",\r\n    \"Galaxy Note 8\",\r\n    \"Galaxy Note 9\",\r\n    \"Galaxy Note 10\",\r\n    \"Galaxy Note 10+\",\r\n    \"Galaxy Note 10 Lite\"\r\n]\r\n\r\n// class CategoryView extends React.Component {\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       selectedItem: '',\r\n//     }\r\n//   }\r\n\r\n//   selectItem() {\r\n//     this.setState({ selectedItem: 'Yes' })\r\n//     console.log()\r\n//   }\r\n\r\n// }\r\n\r\nfunction CategoryView(props) {\r\n    return(\r\n        <div>\r\n          <Container maxWidth=\"lg\">\r\n            <Box mt={6} mb={2}><Typography variant='h5'>Apple</Typography></Box>\r\n            {/* <Box my={1,1} textAlign=\"left\"><Typography variant=\"h6\">Apple</Typography></Box> */}\r\n            <CategoryViewGrid array={appleList} callBack={props.callBack}></CategoryViewGrid>\r\n            <Box mt={6} mb={2}><Typography variant='h5'>Samsung</Typography></Box>\r\n            {/* <Box my={1,1} textAlign=\"left\"><Typography variant=\"h6\">Samsung</Typography></Box> */}\r\n            <CategoryViewGrid array={samsungList} callBack={props.callBack}></CategoryViewGrid>\r\n          </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryView;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n  let button;\r\n\r\n  if('addButton' in props) {\r\n    button = <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={props.addButton}>\r\n    <AddCircleIcon></AddCircleIcon>\r\n  </IconButton> \r\n  } else if('backButton' in props) {\r\n    button = <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={props.backButton}>\r\n    <ArrowBackIcon></ArrowBackIcon>\r\n  </IconButton> \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Dr Boom Communications\r\n          </Typography>\r\n          {button}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    padding: '0px 8px'\r\n  },\r\n}));\r\n\r\nexport class StockItemCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateQuantity = this.updateQuantity.bind(this);\r\n        this.updateColors = this.updateColors.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.state = { quantity: 0, colors: [], isDisabled: false };\r\n    }\r\n\r\n    updateQuantity(value) {\r\n        this.setState({quantity: value});\r\n    }\r\n\r\n    updateColors(value) {\r\n        this.setState({colors: value});\r\n    }\r\n\r\n    addItem(item) {\r\n        if(this.state.quantity > 0 && this.state.colors.length > 0) {\r\n            this.props.add(item);\r\n            this.setState({isDisabled: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Typography variant=\"h6\">{this.props.item.brand} {this.props.item.model}</Typography>\r\n                <QuantityCard callBack={this.updateQuantity}></QuantityCard>\r\n                <ColorCard callBack={this.updateColors} colors={this.props.item.colors}></ColorCard>\r\n                <SaveButton isDisabled={this.state.isDisabled} callBack={this.props.callBack} add={() => this.addItem({...this.props.item, colors: this.state.colors, quantity: this.state.quantity})}></SaveButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport function QuantityCard(props) {\r\n  const [alignment, setAlignment] = React.useState(\"0\");\r\n\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n    if(newAlignment != null)\r\n        props.callBack(newAlignment);\r\n  };\r\n  const classes = useStyles();\r\n  const values = [1, 2, 3, 4, 5];\r\n  const size = \"body2\";\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ToggleButtonGroup size=\"medium\" value={alignment} exclusive onChange={handleChange}>\r\n        {values.map((item) => {\r\n            var style = {\r\n                backgroundColor: 'white',\r\n                color:'black',\r\n                fontSize: \"16px\",\r\n                borderColor: 'black',\r\n            }\r\n\r\n            if(alignment === item) {\r\n                style = {\r\n                    ...style,\r\n                    color:'white',\r\n                    backgroundColor: \"#4caf50\",   \r\n                }\r\n            } \r\n          return <ToggleButton key={item} value={item} style={style}>\r\n            <Typography variant={size}>{item}</Typography>\r\n          </ToggleButton>;\r\n        })}\r\n      </ToggleButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ColorCard(props) {\r\n    const [alignment, setAlignment] = React.useState([]);\r\n  \r\n    const handleChange = (event, newAlignment) => {\r\n      setAlignment(newAlignment);\r\n      if(newAlignment != null)\r\n          props.callBack(newAlignment);\r\n    };\r\n    const classes = useStyles();\r\n    const size = \"body2\";\r\n    const basicColors = ['black', 'white', 'clear'];\r\n    const padding = '8px';\r\n\r\n    if(props.colors.length > 0) {\r\n        return(\r\n            <div className={classes.root}>\r\n                <ToggleButtonGroup size=\"small\" value={alignment} onChange={handleChange}>\r\n                    {\r\n                        props.colors.map((color) => {\r\n    \r\n                            var style = {\r\n                                backgroundColor: 'white',\r\n                                color:'black',\r\n                                fontSize: \"16px\",\r\n                                borderColor: 'black',\r\n                                padding: padding\r\n                            }   \r\n    \r\n                            if(alignment.includes(color)) {\r\n                                style = {\r\n                                    ...style,\r\n                                    color:'white',\r\n                                    backgroundColor: \"#4caf50\",   \r\n                                }\r\n                            }                        \r\n    \r\n                            return (\r\n                                <ToggleButton key={color} value={color} style={style}>\r\n                                    <Typography variant={size}>{color}</Typography>\r\n                                </ToggleButton>\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                </ToggleButtonGroup>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div className={classes.root}>\r\n                <ToggleButtonGroup size=\"small\" value={alignment} onChange={handleChange}>\r\n                    {\r\n                        basicColors.map((color) => {\r\n                            var style = {\r\n                                backgroundColor: 'white',\r\n                                color:'black',\r\n                                fontSize: \"16px\",\r\n                                borderColor: 'black',\r\n                                padding: padding\r\n                            }\r\n                \r\n                            if(alignment.includes(color)) {\r\n                                style = {\r\n                                    ...style,\r\n                                    color:'white',\r\n                                    backgroundColor: \"#4caf50\",   \r\n                                }\r\n                            }                        \r\n                \r\n                            return (\r\n                                <ToggleButton key={color} value={color} style={style}>\r\n                                    <Typography variant={size}>{color}</Typography>\r\n                                </ToggleButton>\r\n                            )\r\n                        })\r\n                    }\r\n                </ToggleButtonGroup>\r\n            </div>\r\n        ) \r\n    }\r\n    \r\n  \r\n    // if(props.colors.length > 0) {\r\n    //     return (\r\n    //         <div className={classes.root}>\r\n    //             <ToggleButtonGroup size=\"small\" value={alignment} onChange={handleChange}>\r\n    //                 {props.colors.map((color) => {\r\n    //                     if(color === 'white' || color === 'clear' || color === 'yellow') {\r\n    //                         return <ToggleButton key={color} value={color} style={{backgroundColor: color, color: 'black', fontSize: \"16px\"}}>\r\n    //                             <Typography variant={size}>{color}</Typography>\r\n    //                          </ToggleButton>\r\n    //                     } else {\r\n    //                         return <ToggleButton key={color} value={color} style={{backgroundColor: color, color: 'white', fontSize: \"16px\"}}>\r\n    //                             <Typography variant={size}>{color}</Typography>\r\n    //                         </ToggleButton>\r\n    //                     }\r\n                        \r\n    //                 })}\r\n    //             </ToggleButtonGroup>\r\n    //         </div>\r\n    //     );\r\n    // } else {\r\n    //     var colors = ['black', 'white', 'clear'];\r\n    //     return (\r\n    //         <div className={classes.root}>\r\n    //             <ToggleButtonGroup size=\"small\" value={alignment} onChange={handleChange}>\r\n    //                 {colors.map((color) => {\r\n    //                     if(color === 'white' || color === 'clear' || color === 'yellow') {\r\n    //                         return <ToggleButton key={color} value={color} style={{backgroundColor: color, color: 'black', fontSize: \"16px\"}}>\r\n    //                             <Typography variant={size}>{color}</Typography>\r\n    //                          </ToggleButton>\r\n    //                     } else {\r\n    //                         return <ToggleButton key={color} value={color} style={{backgroundColor: color, color: 'white', fontSize: \"16px\"}}>\r\n    //                             <Typography variant={size}>{color}</Typography>\r\n    //                         </ToggleButton>\r\n    //                     }\r\n    //                 })}\r\n    //             </ToggleButtonGroup>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n}\r\n\r\nclass SaveButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.state = { disabled: false };\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.add();\r\n    }\r\n\r\n    render() {\r\n\r\n        const classes = {\r\n            margin: \"8px\",\r\n            padding: '0px 8px'}\r\n        const isDisabled = this.props.isDisabled;\r\n\r\n        let button;\r\n        if(isDisabled) {\r\n            button = \r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                style={{...classes, backgroundColor: 'green', color: 'black'}}\r\n                startIcon={<SaveIcon />}\r\n                disabled >\r\n                Save\r\n            </Button>\r\n        } else {\r\n            button =\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                style={classes}\r\n                startIcon={<SaveIcon />}\r\n                onClick={this.handleClick} >\r\n                Save\r\n            </Button> \r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                {button}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { StockItemCard } from '../components/StockItemCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nvar stockData = [\r\n    {brand: \"BOOMtique\", model: \"2 in 1 Magnetic Wallet\", colors: [\"red\", \"brown\", \"black\"]},\r\n    {brand: \"BOOMtique\", model: \"Executive Pouch\", colors: []},\r\n    {brand: \"BOOMtique\", model: \"Executive Wallet\", colors: []},\r\n    {brand: \"BOOMtique\", model: \"Flower Petal Case\", colors: []},\r\n    {brand: \"BOOMtique\", model: \"Generic\", colors: [\"black\", \"clear\", \"red\", \"white\"]},\r\n    {brand: \"BOOMtique\", model: \"Karat Case\", colors: [\"gold\", \"orange\", \"silver\"]},\r\n    {brand: \"BOOMtique\", model: \"Pearl Case\", colors: []},\r\n    {brand: \"BOOMtique\", model: \"Vogue Wallet\", colors: []},\r\n    {brand: \"BOOMtique\", model: \"Waterfall Case\", colors: []},\r\n    {brand: \"Goospery\", model: \"TPU\", colors: [\"black\", \"clear\"]},\r\n    {brand: \"Incipio\", model: \"Dual Layer\", colors: [\"black\", \"clear\"]},\r\n    {brand: \"Mercury\", model: \"Blue Moon\", colors: []},\r\n    {brand: \"Mercury\", model: \"Canvas Diary\", colors: []},\r\n    {brand: \"Mercury\", model: \"Mansoor Wallet Diary Case\", colors: []},\r\n    {brand: \"Mercury\", model: \"Sonata\", colors: []},\r\n    {brand: \"OtterBox\", model: \"Defender\", colors: [\"black\"]},\r\n    {brand: \"OtterBox\", model: \"Strada Folio\", colors: [\"black\"]},\r\n    {brand: \"Samsung\", model: \"Clear View Standing Cover\", colors: []},\r\n    {brand: \"Samsung\", model: \"LED View Cover\", colors: []},\r\n    {brand: \"tech21\", model: \"Evo Check\", colors: [\"black\", \"white\", \"red\", \"purple\", \"pink\", \"yellow\"]},\r\n    {brand: \"tech21\", model: \"Pure Clear\", colors: [\"clear\"]},\r\n    {brand: \"UAG\", model: \"Pylo\", colors: [\"black\"]}\r\n]\r\n\r\nexport default function FullWidthGrid(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {stockData.map((item, index) => {\r\n          return (\r\n            <Grid key={index} item xs={12} md={6} lg={3}>\r\n              <Paper className={classes.paper}>\r\n                <StockItemCard item={item} callBack={props.callBack} add={props.add}></StockItemCard>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container, Box } from '@material-ui/core/';\r\nimport StockViewGrid from './StockViewGrid'\r\n\r\nfunction StockView(props) {\r\n    return (\r\n        <React.Fragment>\r\n          <CssBaseline />\r\n          <Container maxWidth=\"lg\">\r\n              <Box mt={6} mb={2}><Typography variant='h5'>Stock List</Typography></Box>\r\n              <StockViewGrid callBack={props.callBack} add={props.add}></StockViewGrid>\r\n          </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default StockView","import React from 'react'\r\nimport ListView from '../containers/ListView'\r\nimport CategoryView from '../containers/CategoryView'\r\nimport AppBar from '../containers/AppBar'\r\nimport StockView from '../containers/StockView'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.stockView = this.stockView.bind(this);\r\n    this.categoryView = this.categoryView.bind(this);\r\n    this.defautView = this.defautView.bind(this);\r\n    this.addItemToList = this.addItemToList.bind(this);\r\n    this.state = { pageView: 'default', selected: '', dataBase: [] };\r\n  }\r\n\r\n  stockView(props) {\r\n    this.setState({ pageView: 'stockView', selected: props.value })\r\n  }\r\n\r\n  categoryView() {\r\n    this.setState({ pageView: 'categoryView' })\r\n  }\r\n\r\n  defautView() {\r\n    this.setState({ pageView: 'default' })\r\n  }\r\n\r\n  addItemToList(props) {\r\n\r\n    /**\r\n     * Receive object of the form\r\n     *  {\r\n     *    brand,\r\n     *    model,\r\n     *    wantedColors: [],\r\n     *    quantityYouWant\r\n     *  }\r\n     * \r\n     * Add object to dataBase of the form\r\n     *  [\r\n     *    {\r\n     *      deviceName,\r\n     *      list: [\r\n     *        {\r\n     *          brand,\r\n     *          model,\r\n     *          wantedColors: [],\r\n     *          quantityYouWant\r\n     *        }, ...\r\n     *      ]\r\n     *    }\r\n     *  ]\r\n     * \r\n     * Use the selected state value to help you add new / find device items in the list.\r\n     */\r\n\r\n    // Check if item is already in the list\r\n    var index = this.state.dataBase.findIndex((value, index, array) => {\r\n      return value.deviceName === this.state.selected;\r\n    })\r\n\r\n    var retVal;\r\n\r\n    if(index >= 0) {\r\n      retVal = [...this.state.dataBase];\r\n      retVal[index].list = retVal[index].list.concat(props);\r\n      this.setState({dataBase: retVal});\r\n    } \r\n    \r\n    // Otherwise add device\r\n    else {\r\n\r\n      retVal = this.state.dataBase.concat([{\r\n        deviceName: this.state.selected,\r\n        list: [{...props}]\r\n      }]);\r\n\r\n      this.setState({dataBase: retVal});      \r\n      \r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    \r\n    let view;\r\n    const currentView = this.state.pageView;\r\n    if(currentView === 'default')\r\n      view = <DefaultView callBack={this.categoryView} data={this.state.dataBase}></DefaultView>;\r\n    else if(currentView === 'categoryView')\r\n      view = <AddCategoryView callBack={this.stockView}></AddCategoryView>;\r\n      else if(currentView === 'stockView')\r\n      view = <AddStockView callBack={this.defautView} add={this.addItemToList}></AddStockView>;\r\n    \r\n    return(\r\n      view\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction DefaultView(props) {\r\n  return(\r\n    <div>\r\n      <AppBar addButton={props.callBack}></AppBar>\r\n      <ListView data={props.data}></ListView>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AddCategoryView(props) {\r\n  return(\r\n    <div>\r\n      <AppBar></AppBar>\r\n      <CategoryView callBack={props.callBack}></CategoryView>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AddStockView(props) {\r\n  return(\r\n    <div>\r\n      <AppBar backButton={props.callBack}></AppBar>\r\n      <StockView add={props.add}></StockView>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}